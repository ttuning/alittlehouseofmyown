dfESPconnector::setState(): Connector kafkatransportconn in group default has new state: running
dfESPconnector::setState(): Connector pi in group default has new state: running

kdkdMSK Client Machine Configuration:
--------------------------------

sudo yum install java-1.8.0
wget https://archive.apache.org/dist/kafka/2.2.1/kafka_2.12-2.2.1.tgz
tar -xzf kafka_2.12-2.2.1.tgz

Get Zookeeper Hostname:
-----------------------
aws kafka describe-cluster --region us-east-1 --cluster-arn "arn:aws:kafka:us-east-1:177369285206:cluster/mykafkatestcluster/60cc5290-75c7-4a6d-90de-9f5f4434240e-5"
cd kafka_2.12-2.2.1/bin

aws kafka get-bootstrap-brokers --region us-east-1 --cluster-arn "arn:aws:kafka:us-east-1:785018351924:cluster/edaviyaESPProcessing/7adc91c9-f47e-4121-866a-afeb2ade02dc-6"
 "BootstrapBrokerStringTls": 
 
 b-2.edaviyaespprocessing.9mwv7t.c6.kafka.us-east-1.amazonaws.com:9094
 b-3.edaviyaespprocessing.9mwv7t.c6.kafka.us-east-1.amazonaws.com:9094
 b-1.edaviyaespprocessing.9mwv7t.c6.kafka.us-east-1.amazonaws.com:9094

Create Topic:
-------------
sh kafka-topics.sh --create --zookeeper z-3.mykafkatestcluster.pa2z1v.c5.kafka.us-east-1.amazonaws.com:2181 --replication-factor 3 --partitions 1 --topic AWSKafkaTutorialTopic
z-1.edaviyaespprocessing.9mwv7t.c6.kafka.us-east-1.amazonaws.com:2181 





Setup Java Trust Store for MSK:
-------------------------------

cp /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.amzn2.0.1.x86_64/jre/lib/security/cacerts /tmp/kafka.client.truststore.jks

cd bin

vi client.properties and add below properties to the file

security.protocol=SSL
ssl.truststore.location=/tmp/kafka.client.truststore.jks


Producers and Consumers
-----------------------
aws kafka get-bootstrap-brokers --region us-east-1 --cluster-arn "arn:aws:kafka:us-east-1:177369285206:cluster/mykafkatestcluster/60cc5290-75c7-4a6d-90de-9f5f4434240e-5"

sh kafka-console-producer.sh --broker-list b-1.mykafkatestcluster.pa2z1v.c5.kafka.us-east-1.amazonaws.com:9094 --producer.config client.properties --topic AWSKafkaTutorialTopic
sh kafka-console-consumer.sh --bootstrap-server b-1.mykafkatestcluster.pa2z1v.c5.kafka.us-east-1.amazonaws.com:9094 --consumer.config client.properties --topic AWSKafkaTutorialTopic --from-beginning



000052
2020-05-27T19:49:18,563; INFO ; 00000016; DF.ESP; (dfESPkafkaConnector.cpp:2789); {aca2caf0-50ec-41df-ab4e-57790258ac9f}[Connectors0050] setLastMsgId(): Standby taking over, last message id = 2814749767107964
2020-05-27T19:51:45,848; INFO ; 00000015; DF.ESP; (dfESPkafkaConnector.cpp:753); {aca2caf0-50ec-41df-ab4e-57790258ac9f}[Connectors0052] dfESPkafkaConnector::sendSerializedBlock(): Standby synced, current message id = 2814749767107964
2020-05-27T19:51:45,848; WARN ; 00000015; DF.ESP; (dfESPkafkaConnector.cpp:954); {aca2caf0-50ec-41df-ab4e-57790258ac9f}[Connectors0049] dfESPkafkaConnector::goActive(): Hot failover state switched to active


2020-05-28T14:00:45,107; INFO ; 00000024; common.http; (Http.cpp:970); {3394e5a8-1551-403d-93d6-4d3e4c206869}[XMLServer0001] starting HTTP server on port 62000, type=admin
2020-05-28T14:02:50,533; INFO ; 00000596; DF.ESP; (dfESPkafkaConnector.cpp:307); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0098] dfESPkafkaConnector::z_watcher(): Zookeeper watcher event: watcher = DELETED_EVENT, state = CONNECTED_STATE, path = /ESP/server-n_0000000057
2020-05-28T14:02:51,562; INFO ; 00000016; DF.ESP; (dfESPkafkaConnector.cpp:2789); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0050] setLastMsgId(): Standby taking over, last message id = 2814749767106845
2020-05-28T14:02:51,618; INFO ; 00000015; DF.ESP; (dfESPkafkaConnector.cpp:712); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0051] dfESPkafkaConnector::sendSerializedBlock(): Standby sending buffered messages, last message id = 2814749767106845, current message id = 2814749767106858
2020-05-28T14:02:51,618; ERROR; 00000015; DF.ESP; (dfESPkafkaConnector.cpp:716); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0046] dfESPkafkaConnector::sendSerializedBlock(): Could not find buffered message, id = 2814749767106846
2020-05-28T14:02:52,729; INFO ; 00000016; DF.ESP; (dfESPkafkaConnector.cpp:2789); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0050] setLastMsgId(): Standby taking over, last message id = 2814749767106845
2020-05-28T14:02:52,729; INFO ; 00000015; DF.ESP; (dfESPconnector.cpp:1444); {3394e5a8-1551-403d-93d6-4d3e4c206869}[Connectors0087] dfESPconnector::setState(): Connector kafka_OUT in group default has new state: stopped



r event: watcher = SESSION_EVENT, state = EXPIRED_SESSION_STATE, path =
2020-05-29T15:29:42,435; ERROR; 00029157; DF.ESP; (dfESPkafkaConnector.cpp:355); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0032] dfESPkafkaConnector::z_watcher(): Bad zookeeper state, EXPIRED_SESSION_STATE
2020-05-29T15:29:42,435; INFO ; 00000067; DF.ESP; (dfESPconnector.cpp:1444); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0087] dfESPconnector::setState(): Connector kafka_OUT in group default has new state: stopped
2020-05-29T15:29:42,435; INFO ; 00000072; DF.ESP; (dfESPconnector.cpp:1444); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0087] dfESPconnector::setState(): Connector kafka_IN in group default has new state: stopped
2020-05-29T15:29:42,435; INFO ; 00019873; DF.ESP; (dfESPconnector.cpp:1444); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0087] dfESPconnector::setState(): Connector kafka_IN in group default has new state: stopped
2020-05-29T15:34:42,581; INFO ; 00029158; DF.ESP; (dfESPkafkaConnector.cpp:3133); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0095] dfESPkafkaConnector::event_cb(): RdKafka event callback: type = EVENT_LOG, message = 4-MAXPOLL: [thrd:main]: Application maximum poll interval (300000ms) exceeded by 98ms (adjust max.poll.interval.ms for long-running message processing): leaving group, connector = kafka_IN, window = kafka_incoming
2020-05-29T15:34:42,635; INFO ; 00029159; DF.ESP; (dfESPkafkaConnector.cpp:3133); {a9abb76d-4237-4ee8-ac91-2eec43c83ca6}[Connectors0095] dfESPkafkaConnector::event_cb(): RdKafka event callback: type = EVENT_LOG, message = 4-MAXPOLL: [thrd:main]: Application maximum poll interval (300000ms) exceeded by 120ms (adjust max.poll.interval.ms for long-running message processing): leaving group, connector = kafka_IN, window = Data_Ingestion_Publisher_Connector
